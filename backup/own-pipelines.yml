# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: |
    if command -v gcc >/dev/null 2>&1; then
      echo "GCC is installed"
    else
      echo "GCC is not installed yet"
      echo "Installing GCC"
      sudo apt install gcc
      sudo apt update -y
      sudo apt upgrade -y
    fi
  displayName: 'GCC check install'

- script: |
    echo "Try to compile with gcc"
    gcc ./src/track1/test.c -o test.out > compileGCCError.txt
    if [ $? -eq 0 ]; then
      echo "Compile successful."
    else
      echo "Compile failed. Check the file compileGCCError.txt for more information".
    fi
  displayName: 'GCC compile'
- script: |
    echo "We use cppcheck for further vulnerabilities"
    echo "We"
    if command -v cppcheck >/dev/null 2>&1; then
      echo "cppcheck is already installed."
    else
      echo "cppcheck is not installed. Installing..."
      sudo apt-get update
      sudo apt-get install -y cppcheck
      echo "cppcheck has been installed."
    fi
  displayName: 'check cppcheck install'
- script: |
    echo "cppcheck..."
    cppcheck .scr/track1/*.c  > cppcheckLog.txt
  displayName: 'cppcheck'
    
